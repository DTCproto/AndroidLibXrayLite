# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: BUILD_APK

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
    - name: java version
      run: |
        java --version

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.19'
    - name: Install gomobile
      run: |
        go install golang.org/x/mobile/cmd/gomobile@latest
        echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
    
    - name: sdkmanager list
      run: sdkmanager --list
    
    - name: Build dependencies
      run: |
        mkdir ${{ github.workspace }}/build
        cd ${{ github.workspace }}/build
        git clone --depth=1 -b main https://github.com/DTCproto/AndroidLibXrayLite.git
        git clone --depth=1 -b master https://github.com/2dust/v2rayNG.git
        cd AndroidLibXrayLite
        gomobile init
        go mod tidy -v
        gomobile bind -v -androidapi 19 -ldflags='-s -w' ./
        cp *.aar ../v2rayNG/V2rayNG/app/libs/

    - name: Build APK
      run: |
        cd ${{ github.workspace }}/build/v2rayNG/V2rayNG
        chmod 777 *
        sed -i 's/-XX:MaxPermSize=512m/ /' ${{ github.workspace }}/build/v2rayNG/V2rayNG/gradle.properties
        ./gradlew assembleRelease
    
    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: apk
        path: ${{ github.workspace }}/build/v2rayNG/V2rayNG/app/build/outputs/apk/**/*.apk
